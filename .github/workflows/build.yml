# SPDX-FileCopyrightText: 2022 The SMW Music Python Project Authors
# <https://github.com/com-posers-pit/smw_music/blob/develop/AUTHORS.rst>
#
# SPDX-License-Identifier: CC0-1.0

name: Build

on:
  workflow_run:
    workflows: ["Test"]
    branches: ["main"]
    types:
      - completed

jobs:
#   linux:
#     runs-on: ubuntu-latest
#     if: github.event.workflow_run.conclusion == 'success'
#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v2
#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.10'
#       - name: Install Poetry
#         uses: snok/install-poetry@v1
#         with:
#           virtualenvs-create: true
#           virtualenvs-in-project: true
#           installer-parallel: true
#       - name: Load cached venv
#         id: cached-poetry-dependencies
#         uses: actions/cache@v2
#         with:
#           path: .venv
#           key: venv-linux-${{ hashFiles('**/poetry.lock') }}
#       - name: Install dependencies
#         if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
#         run: poetry install --no-interaction --no-root
#       - name: Install library
#         run: poetry install --no-interaction
#       - name: Run pyinstaller
#         run: poetry run pyinstaller -F --hidden-import music21.alpha --hidden-import music21.audioSearch --hidden-import music21.configure --add-data smw_music/data/mml.txt:smw_music/data smw_music/scripts/dashboard.py
#       - name: Upload
#         uses: actions/upload-artifact@v2
#         with:
#           name: dashboard-linux
#           path: dist/dashboard*


  windows:
    runs-on: windows-latest
    if: github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-windows-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install library
        run: poetry install --no-interaction
      - name: Run pyinstaller
        run: poetry run pyinstaller -F --hidden-import music21.alpha --hidden-import music21.audioSearch --hidden-import music21.configure --add-data "smw_music/data/mml.txt;smw_music/data" smw_music/scripts/dashboard.py
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: dashboard-windows
          path: dist/dashboard*

#   mac:
#     runs-on: macos-latest
#     if: github.event.workflow_run.conclusion == 'success'
#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v2
#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.10'
#       - name: Install Poetry
#         uses: snok/install-poetry@v1
#         with:
#           virtualenvs-create: true
#           virtualenvs-in-project: true
#           installer-parallel: true
#       - name: Load cached venv
#         id: cached-poetry-dependencies
#         uses: actions/cache@v2
#         with:
#           path: .venv
#           key: venv-macos-${{ hashFiles('**/poetry.lock') }}
#       - name: Install dependencies
#         if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
#         run: poetry install --no-interaction --no-root
#       - name: Install library
#         run: poetry install --no-interaction
#       - name: Run pyinstaller
#         run: poetry run pyinstaller -F --hidden-import music21.alpha --hidden-import music21.audioSearch --hidden-import music21.configure --add-data smw_music/data/mml.txt:smw_music/data smw_music/scripts/dashboard.py
#       - name: Upload
#         uses: actions/upload-artifact@v2
#         with:
#           name: dashboard-mac
#           path: dist/dashboard*
