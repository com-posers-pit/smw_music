# SPDX-FileCopyrightText: 2022 The SMW Music Python Project Authors
# <https://github.com/com-posers-pit/smw_music/blob/develop/AUTHORS.rst>
#
# SPDX-License-Identifier: CC0-1.0

name: Publish

on:
  push:
    tags: ['v*.*.*']

jobs:
  pypi:
    runs-on: ubuntu-latest
    steps:
      - name: Install audio library
        run: sudo apt install -y portaudio19-dev
      - uses: actions/checkout@v3
      - name: Build and publish to pypi
        uses: JRubics/poetry-publish@v1.10
        with:
          pypi_token: ${{ secrets.PYPI_TOKEN }}

  windows:
    defaults:
      run:
        shell: bash
    runs-on: windows-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.0'
      - name: Install poetry
        uses: snok/install-poetry@v1
      - name: Install library
        run: poetry install --no-interaction
      - name: Run pyinstaller
        run: poetry run pyinstaller dashboard.spec
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/dashboard.exe
          asset_name: SPaCeMusicW-windows-$tag.exe
          tag: ${{ github.ref }}
          overwrite: true

  linux:
    strategy:
      matrix:
        os:
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install audio library
        run: sudo apt install -y portaudio19-dev
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.0'
      - name: Install poetry
        uses: snok/install-poetry@v1
      - name: Install library
        run: poetry install --no-interaction
      - name: Run pyinstaller
        run: poetry run pyinstaller dashboard.spec
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/dashboard
          asset_name: SPaCeMusicW-${{ matrix.os }}-$tag
          tag: ${{ github.ref }}
          overwrite: true

  osx:
    strategy:
      matrix:
        os:
          - macos-12
          - macos-11
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install audio library
        run: brew install portaudio
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.0'
      - name: Install poetry
        uses: snok/install-poetry@v1
      - name: Install library
        run: poetry install --no-interaction
      - name: Run pyinstaller
        run: poetry run pyinstaller dashboard.spec
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/dashboard
          asset_name: SPaCeMusicW-${{ matrix.os }}-$tag
          tag: ${{ github.ref }}
          overwrite: true

  misc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build misc artifacts
        run: |
          mkdir musescore
          cp -r ${{ github.workspace }}/misc/*.drm ${{ github.workspace }}/misc/SMW_Porting.mpal musescore
          zip -r musescore.zip musescore
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: musescore.zip
          tag: ${{ github.ref }}
          overwrite: true
